org: neelgajjar004
service: serverless-student-portal
frameworkVersion: '3'

provider: 
  name: aws
  runtime: nodejs20.x
  region: ap-south-1
  stage: ${opt:stage,'dev'}
  memorySize: 512
  timeout: 30
  environment:
    USER_TABLE: ${self:custom.userTableName}
    STUDENT_TABLE: ${self:custom.studentTableName}
  iamRoleStatements:
    - Effect: "Allow"
      Action: 
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:Query
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - !GetAtt UserTable.Arn
        - !Join [ "/", [ !GetAtt UserTable.Arn, "*" ] ]
        - !GetAtt StudentTable.Arn
        - !Join [ "/", [ !GetAtt StudentTable.Arn, "*" ] ]

        
# plugins:
#   - serverless-offline
  # - serverless-dotenv-plugin

custom:
  userTableName: userTable-${opt:stage, self:provider.stage}  
  studentTableName: studentTable-${opt:stage, self:provider.stage}  

functions:
  createUser:
    handler: user/create-user.handler
    description: "Serverless-Student-Portal : Create a New User"
    events:
      - http:
          path: user
          method: post
          cors: true


resources:
  Resources:
    UserTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.userTableName}
        AttributeDefinitions:
          - AttributeName: _id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
          - AttributeName: role
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        BillingMode: PROVISIONED
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 10
        GlobalSecondaryIndexes:
          - IndexName: roleIndex
            KeySchema:
              - AttributeName: _id
                KeyType: HASH
              - AttributeName: role
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 5
              WriteCapacityUnits: 10
    StudentTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.studentTableName}
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
          - AttributeName: classNo
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
          - AttributeName: classNo
            KeyType: RANGE
        BillingMode: PROVISIONED
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 10